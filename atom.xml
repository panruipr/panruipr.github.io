<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ThrowsException的个人博客</title>
  <icon>https://www.gravatar.com/avatar/5609bc06c51c9009d04648504ea05dba</icon>
  <subtitle>Work And Life,Code And Book</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://panruipr.github.io/"/>
  <updated>2018-10-08T03:25:39.916Z</updated>
  <id>https://panruipr.github.io/</id>
  
  <author>
    <name>rui Pan</name>
    <email>panrui1993616@gmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="https://panruipr.github.io/2018/10/08/dowFile/"/>
    <id>https://panruipr.github.io/2018/10/08/dowFile/</id>
    <published>2018-10-08T03:25:39.916Z</published>
    <updated>2018-10-08T03:25:39.916Z</updated>
    
    <content type="html"><![CDATA[<h1 id="下载接口规范"><a href="#下载接口规范" class="headerlink" title="下载接口规范"></a>下载接口规范</h1><h3 id="方法说明："><a href="#方法说明：" class="headerlink" title="方法说明："></a>方法说明：</h3><p><strong>页面流url：</strong> com.phfund.idrep.report.matter.download.flow<br><strong>说明：</strong> 获取服务器文件。</p><h3 id="参数说明："><a href="#参数说明：" class="headerlink" title="参数说明："></a>参数说明：</h3><table><thead><tr><th style="text-align:left">参数名称</th><th>参数说明</th></tr></thead><tbody><tr><td style="text-align:left">filename</td><td>下载文件的名称</td></tr><tr><td style="text-align:left">filepath</td><td>目标文件服务器所在路径</td></tr></tbody></table><h3 id="调用实例："><a href="#调用实例：" class="headerlink" title="调用实例："></a>调用实例：</h3><h5 id="emsp-emsp-emsp-例"><a href="#emsp-emsp-emsp-例" class="headerlink" title="&emsp;&emsp;&emsp;例:"></a>&emsp;&emsp;&emsp;例:</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/default/com.phfund.idrep.report.matter.download.flow?filename=201809096.xlsx;&amp;filepath=/mw/mwadm/domains/pfAdminServer/applications/default.ear/default.war/doc/2c92984565b2f12c0165bccce4b666b9.xlsx"</span> <span class="attr">id</span>=<span class="string">"downFlexReport"</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span> <span class="attr">style</span>=<span class="string">"padding: 6px 11px;"</span>&gt;</span>下载模板<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>结果:</strong>可正确下载文件。  </p><h3 id="注意事项："><a href="#注意事项：" class="headerlink" title="注意事项："></a>注意事项：</h3><p><strong>注意:</strong>参数之间的连接符写&amp;即可，编译之后会自动转成&amp; </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;下载接口规范&quot;&gt;&lt;a href=&quot;#下载接口规范&quot; class=&quot;headerlink&quot; title=&quot;下载接口规范&quot;&gt;&lt;/a&gt;下载接口规范&lt;/h1&gt;&lt;h3 id=&quot;方法说明：&quot;&gt;&lt;a href=&quot;#方法说明：&quot; class=&quot;headerlink&quot; title=
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hexo+gitHub搭建个人博客</title>
    <link href="https://panruipr.github.io/2018/06/05/Hexo-gitHub%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>https://panruipr.github.io/2018/06/05/Hexo-gitHub搭建个人博客/</id>
    <published>2018-06-05T08:31:18.000Z</published>
    <updated>2018-10-08T03:04:30.018Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Hexo-gitHub搭建个人博客，linux系统为centOs7"><a href="#Hexo-gitHub搭建个人博客，linux系统为centOs7" class="headerlink" title="Hexo+gitHub搭建个人博客，linux系统为centOs7"></a>Hexo+gitHub搭建个人博客，linux系统为centOs7</h2><h3 id="1-安装Node-js"><a href="#1-安装Node-js" class="headerlink" title="1.安装Node.js"></a>1.安装Node.js</h3><p>查看linuxs服务版本信息 uname -a;<br>wget <a href="https://nodejs.org/dist/v8.11.2/node-v8.11.2-linux-x64.tar.xz" target="_blank" rel="noopener">https://nodejs.org/dist/v8.11.2/node-v8.11.2-linux-x64.tar.xz</a> 下载安装包</p><ol start="2"><li>解压到当前文件夹<br>tar -xvf node-v8.11.2-linux-x64.tar.xz    解压<br>mv node-v8.11.2-linux-x64.tar.xz  node-v8.11.2  更名<br>cd node-v8.11.2  pwd 获取当前目录路径</li><li>配置环境变量(和配置java环境变量差不多)<br>vi /etc/profile<br>定义一个别名 NODE_HOME=/home/panrui/node-v8.11.2<br>像path中加入bin目录 :NODE_HOME/bin<br>然后导入配置 export里加上 NODE_HOME<br>source profile</li><li>检查nodejs是否安装成功<br>node -v    出现版本信息就证明安装成功</li></ol><h3 id="2-安装hexo和git"><a href="#2-安装hexo和git" class="headerlink" title="2.安装hexo和git"></a>2.安装hexo和git</h3><p>mkdir Hexo<br>cd Hexo<br>yum install git-core 安装git并安装依赖包<br>npm install -g hexo-cli 安装Hexo<br>hexo init 初始化Hexo</p><h3 id="3-安装插件"><a href="#3-安装插件" class="headerlink" title="3.安装插件"></a>3.安装插件</h3><p>npm install hexo-generator-index –save<br>npm install hexo-generator-archive –save<br>npm install hexo-generator-category –save<br>npm install hexo-generator-tag –save<br>npm install hexo-server –save<br>npm install hexo-deployer-git –save<br>npm install hexo-deployer-heroku –save<br>npm install hexo-deployer-rsync –save<br>npm install hexo-deployer-openshift –save<br>npm install hexo-renderer-marked –save<br>npm install hexo-renderer-stylus –save<br>npm install hexo-generator-feed –save<br>npm install hexo-generator-sitemap –save</p><p>注意：插件必须要安装，不然之后执行命令的时候会报错：没有相关的指令，还有就是安装插件的时候必须在，Hexo文件目录下才能执行。有关Hexo的命令也都是在这个文件目录下执行。</p><p>启动hexo服务<br>hexo s<br>测试是否成功，在浏览器种范文locahost:4000默认端口是4000.如果是云服务就ip+port</p><h3 id="3-配置github-上传代码到git"><a href="#3-配置github-上传代码到git" class="headerlink" title="3.配置github 上传代码到git"></a>3.配置github 上传代码到git</h3><ol><li>cd ~/. ssh #检查本机是否存在的shh密钥</li><li>生成ssh密钥，执行一下代码<br>ssh-keygen -t -rsa -C ”邮件地址“</li><li>找到密钥存放地址<br>cat ~/.ssh/id_rsa.pub</li><li>登录git账户，在setting中add sshkey，将密钥粘贴进去并保存</li><li>建立一个仓库，项目名称必须是用户名.github.io 这个之后访问博客的地址。一定不能写错</li><li>配置hexo<br>vim _config,yml<br>deploy:<br>type: git<br>repository: <a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a>:panruipr/panruipr.github.io.git<br>branch: master<br>这里最好复制粘贴不要手打，冒号后面一定要跟一个空格，不然上传的时候没有任何反应，没有报错，代码也上传不成功,坑了我一个小时！</li><li>配置git邮件和用户名用来上传代码的时候，不配置会报错  你是谁？<br>git config –global user.name “panruipr”<br>git config –global user.email “<a href="mailto:xxxx@qq.com" target="_blank" rel="noopener">xxxx@qq.com</a>“</li><li>#上传代码<br>新建博客需要在source/_post文件目录下新建文件<br>hexo d 上传代码<br>hexo d -g 生成并上传</li></ol><p>最后就可以访问自己的博客了，例如<a href="https://panruipr.github.io">https://panruipr.github.io</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Hexo-gitHub搭建个人博客，linux系统为centOs7&quot;&gt;&lt;a href=&quot;#Hexo-gitHub搭建个人博客，linux系统为centOs7&quot; class=&quot;headerlink&quot; title=&quot;Hexo+gitHub搭建个人博客，linux系统为
      
    
    </summary>
    
    
      <category term="Linux" scheme="https://panruipr.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>linux初始安装以及jdk，apache，mysql环境安装部署</title>
    <link href="https://panruipr.github.io/2018/06/04/linux%E5%88%9D%E5%A7%8B%E5%AE%89%E8%A3%85%E4%BB%A5%E5%8F%8Ajdk%EF%BC%8Capache%EF%BC%8Cmysql%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/"/>
    <id>https://panruipr.github.io/2018/06/04/linux初始安装以及jdk，apache，mysql环境安装部署/</id>
    <published>2018-06-04T08:34:29.000Z</published>
    <updated>2018-06-05T03:03:41.747Z</updated>
    
    <content type="html"><![CDATA[<h2 id="linux初始安装以及jdk，apache，mysql环境安装部署"><a href="#linux初始安装以及jdk，apache，mysql环境安装部署" class="headerlink" title="linux初始安装以及jdk，apache，mysql环境安装部署"></a>linux初始安装以及jdk，apache，mysql环境安装部署</h2><h3 id="1-购买第三方云服务相关准备工作"><a href="#1-购买第三方云服务相关准备工作" class="headerlink" title="1.购买第三方云服务相关准备工作"></a>1.购买第三方云服务相关准备工作</h3><ol><li>购买云服务器之后会自动创建一个实例。这里的选择是CentOS 7.2 64位操作系统的。可以根据自己的需求选择相应的操作系统和应用。</li><li>购买成功后到云主机界面重置主机密码，以方便xshell连接。</li><li>用xshell登录云服务器，创建新用户并分配相应的权限，以供学习用。<br>linux拓展命令：</li><li>查看用户：whoami #查看当前登陆用户的用户名<br>who am i #表示打开当前伪装端的用户的用户名<br>who mom likes #登陆人用户的详细信息<br>who 命令其他常用参数<br>参数  说明</li></ol><ul><li>-a  打印能打印的全部</li><li>-d  打印死掉的进程</li><li>-m  同am i,mom likes</li><li>-q  打印当前登录用户数及用户名</li><li>-u  打印当前登录用户登录信息</li><li>-r  打印运行等级</li></ul><h3 id="2-在centos-7下新建用户名并授权常用命令"><a href="#2-在centos-7下新建用户名并授权常用命令" class="headerlink" title="2.在centos 7下新建用户名并授权常用命令"></a>2.在centos 7下新建用户名并授权常用命令</h3><ol><li>新建用户useradd 用户名</li><li>新建groupadd 用户名</li><li>修改用户密码 passwd 用户名</li><li>删除用户userdel -r 用户名 删除用户以及相关的文件</li></ol><h3 id="3-设置防火墙"><a href="#3-设置防火墙" class="headerlink" title="3.设置防火墙"></a>3.设置防火墙</h3><p>因为22端口太容易被扫描到了，对于服务器来说不太安全。那就需要关闭22端口开放新的端口号作为ssh服务的端口<br>相关命令:<br>systemctl status firewalld.service  #查看防火墙状态<br>systemctl status sshd.service #查看ssh状态<br>systemctl stop/start/restart firewalld.service #关闭，开启，重启防火墙<br>systemctl stop/start/restart sshd.service #关闭，开启，重启sshd服务<br>firewalld-cmd –permanent –zone=public –add-port=57482/tcp #添加端口号<br>firewalld-cmd –permanent –zone=public –remove-port=57482/tcp #删除端口号<br>firewalld-cmd –list-all #查看端口列表</p><ol><li>cd /etc/ssh/sshd.config 找到#Port=22 默认端口为22，所以不管注释还是不注释都没用。在下面一行新增Port=57482</li><li>在centos7 里装辅助工具semanage yum provides semanage 主意装semanage需要安装其依赖工具包 yum install policycoreutils-python tab自动补全</li><li>查询当前ssh的端口号 semanage port -l | grep ssh<br>向其中添加新的端口号 semanage port -a -t ssh_port_t -p tcp 57482 再查询一遍端口看看是否配置成功</li><li>重启sshd.service服务  systemctl restart sshd.service</li><li>再防火墙中新增端口 firewalld-cmd –permanent –zone=public –add-port=57482/tcp 并重启</li><li>注意 如果是第三方服务器可以在安全组中自定义安全规则来阻止来自22端口的访问。</li></ol><p>开启防火墙关闭22端口配置只允许57482的端口之后ping不通了。。。,这个时候开放80端口在，在安全组中允许所有端口访问就可以ping通，不知道为什么只允许80端口通过并不能ping通</p><h3 id="4-安装jdk1-8"><a href="#4-安装jdk1-8" class="headerlink" title="4.安装jdk1.8"></a>4.安装jdk1.8</h3><ol><li>先官网下载linux版本的jdk1.8 也可以用内网下载，内网下载速度比较快一点<br>&ensp;wget –no-check-certificate –no-cookies –header “Cookie: oraclelicense=accept-securebackup-cookie” <a href="http://download.oracle.com/otn-pub/java/jdk/8u91-b14/jdk-8u91-linux-x64.tar.gz" target="_blank" rel="noopener">http://download.oracle.com/otn-pub/java/jdk/8u91-b14/jdk-8u91-linux-x64.tar.gz</a></li><li>一般jdk安装在/usr/local目录下。将文件解压到此目录下pwd一下获取路径</li><li>去/etc/profile文件中末尾配置java_home和jre_home简称环境变量，配置如下<br>JAVA_HOME=/usr/local/java/jdk1.8.0_171<br>JRE_HOME=$JAVA_HOME/jre<br>PATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/bin<br>CLASS_PATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/lib<br>export JAVA_HOME JRE_HOME CLASS_PATH PATH</li><li>启用新的配置 source /etc/profile</li><li>查看是否安装成功 java -version 出现版本信息就代表安装成功。</li></ol><h3 id="5-配置tomcat"><a href="#5-配置tomcat" class="headerlink" title="5.配置tomcat"></a>5.配置tomcat</h3><ol><li>下载tomcat7到目标文件</li><li>cd tomcat7/bin 修改catalina,sh添加配置，在此之前保证jdk已经成功安装<br>JAVA_OPTS=”-Xms512m -Xmx1024m -Xss1024K -XX:PermSize=512m -XX:MaxPermSize=1024m”<br>export TOMCAT_HOME=/home/panrui/tomcat7<br>export CATALINA_HOME=/home/panrui/tomcat7<br>export JRE_HOME=/usr/local/java/jdk1.8.0_171/jre<br>export JAVA_HOME=/usr/local/java/jdk1.8.0_171</li><li>修改cd tomcat/conf 下的server.xml里的端口保证对外端口已经添加到防火墙中</li><li>修改第三方服务器安全组规则将新端口添加到允许访问的规则中</li><li>启动服务器./start.sh</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;linux初始安装以及jdk，apache，mysql环境安装部署&quot;&gt;&lt;a href=&quot;#linux初始安装以及jdk，apache，mysql环境安装部署&quot; class=&quot;headerlink&quot; title=&quot;linux初始安装以及jdk，apache，mysq
      
    
    </summary>
    
    
      <category term="Linux" scheme="https://panruipr.github.io/tags/Linux/"/>
    
      <category term="云服务" scheme="https://panruipr.github.io/tags/%E4%BA%91%E6%9C%8D%E5%8A%A1/"/>
    
  </entry>
  
</feed>
